// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models to add
// User , file , folder

model userTable {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  password String
  files fileTable[]

  
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text // MediumText may be needed for MySql
  expiresAt   DateTime 
}


model fileTable {
  id String @id @default(uuid())
  file_name String @unique
  file_type String
  file_url String
  file_size Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creator userTable @relation(fields: [userID],references: [id])
  userID Int
  Folder folderTable? @relation(fields:[folderID],references: [id])
  folderID String?
}

model folderTable {
  id String @id @default(uuid())
  folder_name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folder_size Bytes?
  parent folderTable? @relation("folderChildren", fields: [parentId],references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentId String?
  children folderTable[] @relation("folderChildren")
  files fileTable[]
}